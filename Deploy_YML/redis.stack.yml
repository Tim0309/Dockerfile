# Usage : docker stack deploy -c redis.stack.yml gb

# service默认规则： redis_<NO.>_<m|s>
# 如果 service 命名规则非默认，请跟进修改 create_redis_cluster.sh 变量定义的awk匹配规则
version: "3"

networks:
    gb-net:
        external: true

services:

#  ===================  master  ===================
#  ====  redis_001  ====
    redis_001_m:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D1
            restart_policy:
                    condition: on-failure

#  ====  redis_002  ====
    redis_002_m:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D2
            restart_policy:
                    condition: on-failure

#  ====  redis_003  ====
    redis_003_m:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D3
            restart_policy:
                    condition: on-failure

# ===================  slave  ===================

#  ====  redis_001  ====
    redis_001_s:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D2
            restart_policy:
                    condition: on-failure

#  ====  redis_002  ====
    redis_002_s:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D3
            restart_policy:
                    condition: on-failure

#  ====  redis_003  ====
    redis_003_s:
        image: hub:5000/gb-redis:3.2.8
        networks:
            - gb-net
        deploy:
            placement:
                constraints:
                    # 部署在指定的节点
                    - node.hostname == D1
            restart_policy:
                    condition: on-failure
